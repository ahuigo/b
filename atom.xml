<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2019-06-23T21:44:43Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>React Start</title>
<link href="/b/ria/react-start" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2019-06-23T00:00:00Z</published>
<content># React Runtime
React 运行时，需要引入运行时

## CDN runtime
阮一峰的demo 中的例子

    &lt;head&gt;
        &lt;meta charset="U</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>command</title>
<link href="/b/ria/node-npm" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># command

    npm list -g; # global
    npm list; # local
    npm dedupe -g; # Reduce duplication

</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 的list/tuple 笔记</title>
<link href="/b/py/py-var-list" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># list and tuple
因为tuple 是增加删除元素的不可变的list(数据可以变)，所以代码更安全。
如果可能，能用tuple代替list就尽量用tuple。

	list = [1,2</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>at happens when the listen backlog is full?</title>
<link href="/b/net/net-tcp-backlog" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2019-06-23T00:00:00Z</published>
<content>What happens when the listen backlog is full?

https://www.youtube.com/watch?v=6pK0tz1ifiY</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>linux ssh tool</title>
<link href="/b/net/net-ssh-tool" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2016-09-09T00:00:00Z</published>
<content># SSH Client

## config
以下 `~/.ssh/config` 包含了可以避免在特定网络环境中连接被断掉的情况的设置、使用压缩（这对于通过低带宽连接使用 scp 很有用），以及使</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>SSH SERVER</title>
<link href="/b/net/net-ssh-server" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2019-06-23T00:00:00Z</published>
<content># SSH SERVER
OpenSSH Installations under CentOS Linux

	# To install the server and client type:
	yu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ssh proxy</title>
<link href="/b/net/net-ssh-proxy" rel="alternate" type="text/html"/>
<updated>2019-06-23T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># ssh proxy

    -f Rquests ssh to go to background just before command execution.

## tcp port forw</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Posgtre Var</title>
<link href="/b/db/postgre-var" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># Posgtre Var
## Define and assign
    DECLARE vSite varchar DEFAULT 'TechOnTheNet.com';
    DECLARE</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>PG help</title>
<link href="/b/db/postgre-help" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># PG help

    \h
    \?

show function

    \sf[+]  FUNCNAME       show a function's definition
   </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>FUNCTION</title>
<link href="/b/db/postgre-ddl" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># shell
    psql DBNAME USERNAME
    psql -U user_name -d database_name -h 127.0.0.1 -W
    psql -U </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre SQL function</title>
<link href="/b/db/postgre-ddl-function" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># Postgre SQL function
## 基本语法
必须指定语言 `LANGUAGE plpsql|sql`, `$$` 是分割符

    CREATE OR REPLACE FUNCTI</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre CRUD</title>
<link href="/b/db/postgre-crud" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre CRUD
## string or keyword
    select 'string';
    select "count"(1) from "table_name"

##</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mysql-datatype</title>
<link href="/b/db/mysql-var" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Data Type(数据类型)

	NULL means you do not have to provide a value for the field... default to null
	</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Mysql 的字符串处理</title>
<link href="/b/db/mysql-var-str" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># regexp

  &gt; select 'string or column' regexp 'key1|key2' ;
  1 or 0

## extract(hive only)

  sele</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mysql ddl</title>
<link href="/b/db/mysql-ddl" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2019-06-22T00:00:00Z</published>
<content># Storage Engines

	mariadb&gt; show engines

mysql 下所有引擎的其表结构保存在`tb_name.frm` 中, 而数据结构在不同的引擎下，保存的文件有所不</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>curl manual</title>
<link href="/b/c/ops-curl" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2019-06-22T00:00:00Z</published>
<content>
# curlt to python/node/go...
curl 转换器: https://curl.trillworks.com/

# Usage

	-F,--form
	-D- Dump </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-debug-log</title>
<link href="/b/py/py-debug-log" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface
- logging
https://docs.python.org/3.4/howto/logging.html

## autolog: excepthook

    impo</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>lemp环境搭建</title>
<link href="/b/nginx/nginx-admin" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2019-06-19T00:00:00Z</published>
<content># Preface
本文描述的是centOS6下的[lemp]的配置过程.

# Install The Required Repositories

	sudo rpm -Uvh http://do</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-init</title>
<link href="/b/c/ops-init" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface

# init

## init
init指linux 系统运行级runlevel 0~6. 可在/etc/inittab中指定:

	id:3:initdefault:


##</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 文件处理</title>
<link href="/b/py/py-file" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Directory
建议用Path 代替

## file property
os

### os home

    os.getenv('HOME')

    from os.path im</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>nginx proxy</title>
<link href="/b/nginx/nginx-proxy" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content>## http_proxy
The ngx_http_proxy_module module allows passing requests to another server.

### proxy</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>不要用mongodb</title>
<link href="/b/db/mongo-" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 不要用mongodb
http://coolshell.cn/articles/5826.html

# todo
http://www.tutorialspoint.com/mongodb/

</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js-time</title>
<link href="/b/ria/js-time" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Date Format
&gt; https://zh.wikipedia.org/wiki/ISO_8601

The only format in the spec is a simplified </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 时间函数的用法笔记</title>
<link href="/b/py/py-time" rel="alternate" type="text/html"/>
<updated>2019-06-17T00:00:00Z</updated>
<summary/>
<published>2018-04-02T00:00:00Z</published>
<content># time 工具
time 提供基本的时间，sleep

	import time
	time.time()
		19972314124.05238
        time.localetime(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2019-06-17T00:00:00Z</updated>
<summary/>
<published>2019-06-17T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>awk 简介</title>
<link href="/b/c/ops-awk" rel="alternate" type="text/html"/>
<updated>2019-06-17T00:00:00Z</updated>
<summary/>
<published>2019-06-17T00:00:00Z</published>
<content># Preface
awk  命令行的基本语法为

	awk option 'script' file1 file2 ...
	awk option -f scriptfile file1 file2</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vscode 笔记</title>
<link href="/b/vsc/vsc-" rel="alternate" type="text/html"/>
<updated>2019-06-16T00:00:00Z</updated>
<summary/>
<published>2018-01-03T00:00:00Z</published>
<content># vscode
cmd+p

    ?   help
    @{symbol} jump to symbol 
    cmd+shift+m 切换问题面板
    cmd+j 切换集成终端(c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Shell 工具集合</title>
<link href="/b/c/shell-tool" rel="alternate" type="text/html"/>
<updated>2019-06-16T00:00:00Z</updated>
<summary/>
<published>2016-09-27T00:00:00Z</published>
<content># System debug, 系统调试工具

- web: 对于 Web 调试，curl 和 curl -I 很方便灵活，或者也可以使用它们的同行 wget，或者更现代的 httpie。
- dis</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>linux os</title>
<link href="/b/c/linux-os" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2019-06-15T00:00:00Z</published>
<content># Check os Version

    cat /etc/os-release
    lsb_release -a
    hostnamectl

# vim

    apt-get u</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-complete</title>
<link href="/b/vim/vim-complete" rel="alternate" type="text/html"/>
<updated>2019-06-15T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Omnicomplete
`:help omnifunc and :help coml-omni`
`:help ins-completion` for an overview</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>tool</title>
<link href="/b/c/ops-user" rel="alternate" type="text/html"/>
<updated>2019-06-15T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># tool
last #显示最后登录者
who #显示当前登录者
w：谁登录进来了
id：用户/组身份信息

# su

    su -c 'whoami' - root
    /bin/su </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/arch-docker" rel="alternate" type="text/html"/>
<updated>2019-06-22T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim 使用之变量</title>
<link href="/b/vim/vim-var" rel="alternate" type="text/html"/>
<updated>2019-06-11T00:00:00Z</updated>
<summary/>
<published>2019-06-11T00:00:00Z</published>
<content># vim 使用之变量
本文会系统描述vim 的语法，如果想了解具体选项和操作技巧，参考我的vim 笔记

主要参考 [book]:
http://learnvimscriptthehardway.s</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-cmd</title>
<link href="/b/vim/vim-cmd" rel="alternate" type="text/html"/>
<updated>2019-06-15T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># autocmd
Syntax:

	:au[tocmd] [group] {event} {pat} [nested] {cmd}
			Add {cmd} to the list of comm</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-options</title>
<link href="/b/vim/vim-options" rel="alternate" type="text/html"/>
<updated>2019-06-10T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Set options 
set 命令的语法

	:set {option}
	:se no{option} 
	:se {option}! "toggle option
	:set {optio</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-pattern</title>
<link href="/b/vim/vim-pattern" rel="alternate" type="text/html"/>
<updated>2019-06-10T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Preface

# pattern

	:h pattern

## charlist
Character classes

	\s	whitespace character: &lt;Space&gt; </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js dom 笔记</title>
<link href="/b/ria/js-dom" rel="alternate" type="text/html"/>
<updated>2019-06-10T00:00:00Z</updated>
<summary/>
<published>2016-01-23T00:00:00Z</published>
<content># Js dom 笔记
    document.documentElement ;//html
    document.body;  //html

# Navigator
navigator.a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2019-06-10T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2019-06-19T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2019-06-10T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority

	style &gt; id &gt; hover(鼠标悬停) &gt; class &gt; tag
 </content>
</entry></feed>