<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2019-12-25T23:18:10Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>python 时间函数的用法笔记</title>
<link href="/b/py/py-time" rel="alternate" type="text/html"/>
<updated>2019-12-25T00:00:00Z</updated>
<summary/>
<published>2018-04-02T00:00:00Z</published>
<content># time 工具
time 提供基本的时间，sleep

	import time
	time.time()
		19972314124.05238
        time.localetime(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 字符处理</title>
<link href="/b/py/py-str" rel="alternate" type="text/html"/>
<updated>2019-12-25T00:00:00Z</updated>
<summary/>
<published>2017-08-09T00:00:00Z</published>
<content># Python 字符处理
- serialize
见/py/py-serial.md

# String
same as js:

	print "a\nb" ;# The character he</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js dom 笔记</title>
<link href="/b/ria/js-dom" rel="alternate" type="text/html"/>
<updated>2019-12-15T00:00:00Z</updated>
<summary/>
<published>2016-01-23T00:00:00Z</published>
<content># Js dom 笔记
    document.documentElement ;//html
    document.body;  //html

# Device
## Navigator
n</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>code split</title>
<link href="/b/webpack/12.webpack-codesplit-and-lazy" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-06T00:00:00Z</published>
<content># code split
有三种常用的代码分离方法：

    入口起点：使用 entry 配置手动地分离代码。
    防止重复：使用 CommonsChunkPlugin 去重和分离 chunk。</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>git 使用之日志、数据恢复</title>
<link href="/b/git/git-log" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-06T00:00:00Z</published>
<content># 日志过滤

## by branch
1. `^` means not in
1. `A..B` means from A to B(exclude A)

	git log [repo/]bra</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang func</title>
<link href="/b/go/16.go-func" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># define func
1. 不支持嵌套nested, 重载overload 和 
2. 不支持默认参数default parameter
3. 支持不定长变参数
4. 多返回值
5. 支持命名返</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>git submodule</title>
<link href="/b/git/git-submodule" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># git submodule
## add

	$ git submodule add https://github.com/ahuigo/c-lib
	Cloning into 'c-lib'..</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-func</title>
<link href="/b/py/py-func" rel="alternate" type="text/html"/>
<updated>2019-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

函数式编程

# call func
getattr(foo, 'bar')()
locals()['bar']()
globals()['bar']()

## exec fu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 的语法</title>
<link href="/b/py/py-expr" rel="alternate" type="text/html"/>
<updated>2019-11-30T00:00:00Z</updated>
<summary/>
<published>2018-03-01T00:00:00Z</published>
<content># 多条件compare
多条件比较

    &gt;&gt;&gt; 5&lt;i&lt;100
    &gt;&gt;&gt; 1 &lt; 3 &gt;= 3 &gt; 1==1 &lt;100
    True

# 条件和循环

## try finnaly</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 的索引</title>
<link href="/b/db/pg-index" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre Index
本文主要围绕postgre 总结一下索引, 参考：[PostgreSQL 9种索引的原理和应用场景](https://yq.aliyun.com/articles/11</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>PG help</title>
<link href="/b/db/pg-help" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># PG help

    \h
    \?

show function

    \sf[+]  FUNCNAME       show a function's definition
   </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre expression</title>
<link href="/b/db/pg-expr" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-09-08T00:00:00Z</published>
<content># Postgre expression


# variable 
## variable as table
https://stackoverflow.com/questions/35559093</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>FUNCTION</title>
<link href="/b/db/pg-ddl" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># shell

## connect shell
默认同时支持 unix domain socket + ip/port net socket

    psql DBNAME USERNAME
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre User and Authentication</title>
<link href="/b/db/pg-ddl-user" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># help
    \h alter
    ALTER ROLE name RENAME TO new_name

# Postgre User and Authentication
    ps</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 安装\配置\管理</title>
<link href="/b/db/pg-ddl-install" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre 安装\配置\管理
    rpm -Uvh https://yum.postgresql.org/10/redhat/rhel-7-x86_64/pgdg-centos10-10-</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre SQL function</title>
<link href="/b/db/pg-ddl-function" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># Postgre SQL function
## 基本语法
必须指定语言 `LANGUAGE plpsql|sql`, `$$` 是分割符

    CREATE OR REPLACE FUNCTI</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre CRUD</title>
<link href="/b/db/pg-crud" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre CRUD
## string or keyword
    select 'string';
    select "count"(1) from "table_name"

##</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>React Error 边界</title>
<link href="/b/ria/react-debug" rel="alternate" type="text/html"/>
<updated>2019-11-28T00:00:00Z</updated>
<summary/>
<published>2019-09-07T00:00:00Z</published>
<content># React Error 边界
React 提供Error 捕获，但错误边界无法捕获以下场景中产生的错误(本质就是try-catch)：

    事件处理（了解更多）
    异步代码（例如 se</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2019-12-15T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>浏览器同源政策及其规避方法</title>
<link href="/b/ria/js-cors" rel="alternate" type="text/html"/>
<updated>2019-11-28T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 浏览器同源政策及其规避方法
http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html
http://www.ruanyifeng</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>React HOC 高阶组件</title>
<link href="/b/ria/react-com-hoc" rel="alternate" type="text/html"/>
<updated>2019-11-26T00:00:00Z</updated>
<summary/>
<published>2019-09-08T00:00:00Z</published>
<content># React HOC 高阶组件
具体而言，高阶组件是参数为组件，返回值为新组件的函数。

    const EnhancedComponent = higherOrderComponent(Wra</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>antv and bizcharts</title>
<link href="/b/ria/chart-antv" rel="alternate" type="text/html"/>
<updated>2019-12-15T00:00:00Z</updated>
<summary/>
<published>2019-12-15T00:00:00Z</published>
<content># Antv &amp; bizcharts

# style
## padding
https://bizcharts.net/products/bizCharts/docs/qa 设置padding 解决</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>deny ngx_http_access_module</title>
<link href="/b/nginx/nginx-location" rel="alternate" type="text/html"/>
<updated>2019-11-24T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content>### deny ngx_http_access_module
Allows/Deny access for the specified network or address. If the spec</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Ant desigin pro 开发介绍</title>
<link href="/b/ria/umi/umi-antd-pro" rel="alternate" type="text/html"/>
<updated>2019-11-28T00:00:00Z</updated>
<summary/>
<published>2019-11-20T00:00:00Z</published>
<content># Ant desigin pro 开发介绍
antd pro 由umijs 这个脚手架生成， 我看重的几点：
1. 按需要加载: 不会因为项目变大，首页加载变慢
2. HMR: 开发时的热更新
3.</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js dom file</title>
<link href="/b/ria/js-dom-file" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-06T00:00:00Z</published>
<content># Focus

    var isFocused = (document.activeElement === dummyEl);
    ele.focus()

# FormData

## i</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority
你应该知道的一些事情——CSS权重
https://www.w3cplus.com/</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac user manager</title>
<link href="/b/mac/mac-user" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-11-20T00:00:00Z</published>
<content>
# Preface
mac下没有adduser, 那如何在mac中添加用户/组?

# 命令行操作 

## 交互
从命令行进入交互模式：
 
	dscl localhost

进入组目录:

	c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 的索引</title>
<link href="/b/db/postgre-index" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre Index
本文主要围绕postgre 总结一下索引, 参考：[PostgreSQL 9种索引的原理和应用场景](https://yq.aliyun.com/articles/11</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Typescript 的module</title>
<link href="/b/ria/ts/ts-module" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content>## 外部模块与内部模块
外部模块(.js) 通过查找.d.ts 导入

    外部模块(.js) + .d.ts = 内部模块(.ts)

外部模块.d.ts 查找目录
1. node_modul</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>function buildName({firstName = 'Tom', lastName=''}:{firstName:string, lastName:string}={}) {</title>
<link href="/b/ria/ts/ts-a-todo" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2019-11-11T00:00:00Z</published>
<content>    function buildName({firstName = 'Tom', lastName=''}:{firstName:string, lastName:string}={}) {
  </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js notes</title>
<link href="/b/ria/js-obj" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2019-11-11T00:00:00Z</published>
<content># Object

## isEmpty
    ECMA 7+:
    Object.entries(obj).length === 0 &amp;&amp; obj.constructor === Object</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>2019 年崇礼富龙滑雪</title>
<link href="/b/life/ski" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-01T00:00:00Z</published>
<content># 2019 年崇礼富龙滑雪
位于崇礼的雪场一直来都是北京滑雪爱好者的“圣地“。 准备本周日12.7去石京龙滑雪. 

1. 一是与吉林新疆雪场相比，崇礼离北京只有200多公里，适合工作之余的周末去;</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac 工具集</title>
<link href="/b/mac/mac-tool" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-10-10T00:00:00Z</published>
<content># Preface
本文是我所用的mac 工具集大杂烩。

一些mac osx 能做而linux 桌面级OS 目前不能做的事情：

- mac 支持全局readline , 字符编辑的效率非常非常高(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>GMT,UTC,DST,CST 各种时间标准</title>
<link href="/b/c/shell-time" rel="alternate" type="text/html"/>
<updated>2019-12-25T00:00:00Z</updated>
<summary/>
<published>2012-07-08T00:00:00Z</published>
<content># 各世界时间标准
我们经常遇到这4种时间：GMT,UTC,DST,CST。google了一下，在此做个小结.

## 格林威治标准时间GMT
含义：「格林威治标准时间」(Greenwich Mean</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-process-ps</title>
<link href="/b/c/ops-process-ps" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface

# processe status
linux上进程有5种状态:

1. 运行(正在运行或在运行队列中等待)
2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)
3</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>webspider</title>
<link href="/b/py/py-webspider" rel="alternate" type="text/html"/>
<updated>2019-11-06T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># webspider
Python 3网络爬虫开发实战 
https://germey.gitbooks.io/python3webspider/1.2.2-Selenium%E7%9A%84%E5</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Sth. About Mobile Communication</title>
<link href="/b/life/life-mobile" rel="alternate" type="text/html"/>
<updated>2019-11-06T00:00:00Z</updated>
<summary/>
<published>2019-11-06T00:00:00Z</published>
<content># Preface
&gt; ps: 绝大部分业务在月末是无法办理的.

# 大宝卡
移动大王卡、联通大王卡和电信超牛卡、到底谁划算?
https://zhuanlan.zhihu.com/p/242492</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/docker-" rel="alternate" type="text/html"/>
<updated>2019-12-11T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Node 执行shell 的方法</title>
<link href="/b/ria/node-shell" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-08-25T00:00:00Z</published>
<content># Node 执行shell 的方法
child_process 提供了很多执行shell 的包:
- exec+ util.promisify
- execSync
- spawn
- spawnS</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ES6 Modudle 使用</title>
<link href="/b/ria/js-module-es6" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-04-05T00:00:00Z</published>
<content># js load
## defer vs async

    &lt;script src="async.js" async&gt;&lt;/script&gt;
    &lt;script src="async.js" d</content>
</entry></feed>