<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2019-11-20T22:52:29Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>Ant desigin pro 开发介绍</title>
<link href="/b/ria/umi/umi-antd-pro" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-11-20T00:00:00Z</published>
<content># Ant desigin pro 开发介绍
antd pro 由umijs 这个脚手架生成， 我看重的几点：
1. 按需要加载: 不会因为项目变大，首页加载变慢
2. HMR: 开发时的热更新
3.</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js dom file</title>
<link href="/b/ria/js-dom-file" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-11-20T00:00:00Z</published>
<content># Focus

    var isFocused = (document.activeElement === dummyEl);
    ele.focus()

# FormData

## i</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority
你应该知道的一些事情——CSS权重
https://www.w3cplus.com/</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac user manager</title>
<link href="/b/mac/mac-user" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-11-20T00:00:00Z</published>
<content>
# Preface
mac下没有adduser, 那如何在mac中添加用户/组?

# 命令行操作 

## 交互
从命令行进入交互模式：
 
	dscl localhost

进入组目录:

	c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 的索引</title>
<link href="/b/db/postgre-index" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre Index
本文主要围绕postgre 总结一下索引, 参考：[PostgreSQL 9种索引的原理和应用场景](https://yq.aliyun.com/articles/11</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Typescript 的module</title>
<link href="/b/ria/ts/ts-module" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content>## 外部模块与内部模块
外部模块(.js) 通过查找.d.ts 导入

    外部模块(.js) + .d.ts = 内部模块(.ts)

外部模块.d.ts 查找目录
1. node_modul</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>function buildName({firstName = 'Tom', lastName=''}:{firstName:string, lastName:string}={}) {</title>
<link href="/b/ria/ts/ts-a-todo" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2019-11-11T00:00:00Z</published>
<content>    function buildName({firstName = 'Tom', lastName=''}:{firstName:string, lastName:string}={}) {
  </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js notes</title>
<link href="/b/ria/js-obj" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2019-11-11T00:00:00Z</published>
<content># Object

## isEmpty
    ECMA 7+:
    Object.entries(obj).length === 0 &amp;&amp; obj.constructor === Object</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>2019崇礼富龙滑雪指引</title>
<link href="/b/life/ski" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-10-10T00:00:00Z</published>
<content># 2019 年崇礼富龙滑雪指引
位于崇礼的雪场一直来都是北京滑雪爱好者的“圣地“。

一是与吉林新疆雪场相比，崇礼离北京只有200多公里，适合工作之余的周末去; 
二是与北京近郊的南山、渔阳、怀北、</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac 工具集</title>
<link href="/b/mac/mac-tool" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-10-10T00:00:00Z</published>
<content># Preface
本文是我所用的mac 工具集大杂烩。

一些mac osx 能做而linux 桌面级OS 目前不能做的事情：

- mac 支持全局readline , 字符编辑的效率非常非常高(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>GMT,UTC,DST,CST 各种时间标准</title>
<link href="/b/c/shell-time" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2012-07-08T00:00:00Z</published>
<content># 各世界时间标准
我们经常遇到这4种时间：GMT,UTC,DST,CST。google了一下，在此做个小结.

## 格林威治标准时间GMT
含义：「格林威治标准时间」(Greenwich Mean</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-process-ps</title>
<link href="/b/c/ops-process-ps" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface

# processe status
linux上进程有5种状态:

1. 运行(正在运行或在运行队列中等待)
2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)
3</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>webspider</title>
<link href="/b/py/py-webspider" rel="alternate" type="text/html"/>
<updated>2019-11-06T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># webspider
Python 3网络爬虫开发实战 
https://germey.gitbooks.io/python3webspider/1.2.2-Selenium%E7%9A%84%E5</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Sth. About Mobile Communication</title>
<link href="/b/life/life-mobile" rel="alternate" type="text/html"/>
<updated>2019-11-06T00:00:00Z</updated>
<summary/>
<published>2019-11-06T00:00:00Z</published>
<content># Preface
&gt; ps: 绝大部分业务在月末是无法办理的.

# 大宝卡
移动大王卡、联通大王卡和电信超牛卡、到底谁划算?
https://zhuanlan.zhihu.com/p/242492</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/docker-" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Node 执行shell 的方法</title>
<link href="/b/ria/node-shell" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-08-25T00:00:00Z</published>
<content># Node 执行shell 的方法
child_process 提供了很多执行shell 的包:
- exec+ util.promisify
- execSync
- spawn
- spawnS</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ES6 Modudle 使用</title>
<link href="/b/ria/js-module-es6" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-04-05T00:00:00Z</published>
<content># js load
## defer vs async

    &lt;script src="async.js" async&gt;&lt;/script&gt;
    &lt;script src="async.js" d</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js 的函数</title>
<link href="/b/ria/js-func" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2017-07-11T00:00:00Z</published>
<content># async
## generator
    function* foo() {
        yield 11
        return 22;//没用
    }
    f=foo()</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-find</title>
<link href="/b/c/shell-find" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface

	find -maxdepth 1 -name '*' -inum 1324 -exec rm {} \;
	find -maxdepth 1 -name '*' -inum 1</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Shell 变量的数据类型</title>
<link href="/b/c/1.shell-var" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Shell 变量的数据类型
shell 主要支持字符串 和 数组 两种数据类型。数组功能很弱，如果想做复杂的处理，建议用python 等脚本处理。

## 变量定义与删除

    VAR='he</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>rsion?=0.3.0</title>
<link href="/b/arch/docker-makefile" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2019-11-04T00:00:00Z</published>
<content>version?=0.3.0
image:
	echoraw $(version)
	docker image build -t blog:$(version) .
	docker tag blog:</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>node 系统相关</title>
<link href="/b/ria/node-os" rel="alternate" type="text/html"/>
<updated>2019-10-30T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># node 系统相关

    global.process === process 

## shell child process

    const execSync = require('</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js-css-less</title>
<link href="/b/ria/js-css-less" rel="alternate" type="text/html"/>
<updated>2019-10-30T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Preface
从最早的Less、SASS，到后来的 PostCSS，再到最近的 CSS in JS，都是为了解决这个问题。--- ruanyifeng(css modules)

less vs</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>三角形triangle</title>
<link href="/b/math/geo-triangle" rel="alternate" type="text/html"/>
<updated>2019-10-30T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 三角形triangle
## 三角心
http://math001.com/triangle_lines_onepoint/

1. 角平分线相交于内心，即内切圆圆心
1. 中线相交于重心. 即切</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Posix Regex 正则语法</title>
<link href="/b/code/code-regex" rel="alternate" type="text/html"/>
<updated>2019-10-30T00:00:00Z</updated>
<summary/>
<published>2018-08-18T00:00:00Z</published>
<content># Wildcard 通配符 和 Posix 正则
正则分两大类:Posix和PCRE(Perl Compatible Regular Expression ). posix 已经很老了, 效率也没有</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>JS Math</title>
<link href="/b/ria/js-math" rel="alternate" type="text/html"/>
<updated>2019-10-24T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Math

	E	返回算术常量 e，即自然对数的底数（约等于2.718）。
	LN2	返回 2 的自然对数（约等于0.693）。
	LN10	返回 10 的自然对数（约等于2.302）。
	LOG</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>管理包和依赖的工具。</title>
<link href="/b/py/py-pkg" rel="alternate" type="text/html"/>
<updated>2019-11-11T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 管理包和依赖的工具。

pip：Python 包和依赖关系管理工具。官网
pip-tools：保证 Python 包依赖关系更新的一组工具。官网
conda：跨平台，Python 二进制包管理工具</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>shell color</title>
<link href="/b/c/shell-color" rel="alternate" type="text/html"/>
<updated>2019-10-24T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># shell color
https://en.wikipedia.org/wiki/ANSI_escape_code
http://pueblo.sourceforge.net/doc/manua</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Chrome devtools 使用汇总</title>
<link href="/b/ria/js-debug-chrome" rel="alternate" type="text/html"/>
<updated>2019-10-22T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># Chrome devtools 使用汇总
chrome://chrome-urls/

## Network dns
- Dns Cache
chrome://net-internals/#dns</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js Array 整理</title>
<link href="/b/ria/js-array" rel="alternate" type="text/html"/>
<updated>2019-10-22T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Js Array 整理
array 不像string 是primitive value, 所以length 可以缩短放大array。

	arr = [1,2,3]
	arr.length = 1</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>React Ref</title>
<link href="/b/ria/React-ref" rel="alternate" type="text/html"/>
<updated>2019-10-22T00:00:00Z</updated>
<summary/>
<published>2019-09-07T00:00:00Z</published>
<content># React Ref
Ref 是用来绑定dom 或 Component实例 的

## Dom Ref
ref.current 指向 div

    const ref= React.create</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2019-11-04T00:00:00Z</updated>
<summary/>
<published>2019-11-04T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS3 选择器</title>
<link href="/b/ria/js-css-selector" rel="alternate" type="text/html"/>
<updated>2019-10-11T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Doc
https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance

# </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>profile</title>
<link href="/b/py/py-profiler" rel="alternate" type="text/html"/>
<updated>2019-10-11T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># profile
- cProfile
类似于xdebug cachegrind profiler 性能画像
- py-spy python 版的top
    - py-spy --pid 123</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>用BeautifulSoup 处理 html/xml</title>
<link href="/b/py/py-html" rel="alternate" type="text/html"/>
<updated>2019-10-01T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># 用BeautifulSoup 处理 html/xml
一般转义html 用一下几个方法

via html

    html.escape(u'&lt;看&gt;')
    &gt;&gt;&gt; html.escape</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>React diff</title>
<link href="/b/ria/react-diff" rel="alternate" type="text/html"/>
<updated>2019-11-20T00:00:00Z</updated>
<summary/>
<published>2019-09-09T00:00:00Z</published>
<content># Diff 的设计动力
在 state 或 props 更新时，相同的 render() 方法会返回一棵新的树。React 需要基于这两棵树之间的差别来判断如何有效率的更新 UI 以保证当前 UI </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js charts</title>
<link href="/b/ria/chart" rel="alternate" type="text/html"/>
<updated>2019-09-27T00:00:00Z</updated>
<summary/>
<published>2019-09-27T00:00:00Z</published>
<content># Preface
http://socialcompare.com/en/comparison/javascript-graphs-and-charts-libraries

# chartjs
h</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>to png</title>
<link href="/b/ria/chart-img" rel="alternate" type="text/html"/>
<updated>2019-09-27T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># to png
https://www.npmjs.com/package/node-highcharts-exporter</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>highcharts</title>
<link href="/b/ria/chart-highchart" rel="alternate" type="text/html"/>
<updated>2019-09-27T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># highcharts
[hicharts](/p/js/js-chart-highcharts)

## responsive highcharts
好的设计方法是, 事先设定好renderTo </content>
</entry></feed>