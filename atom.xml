<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2018-12-20T13:56:16Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>安全的帐号设计</title>
<link href="/b/sec/security-account" rel="alternate" type="text/html"/>
<updated>2018-12-20T00:00:00Z</updated>
<summary/>
<published>2018-12-20T00:00:00Z</published>
<content># Preface
帐号设计可以涉及到很多细节，本文主要从安全的角度作一个总结:

1. password 安全
1. sid 的设计
3. 内部Api 授权
4. SSO 单点登录

# passw</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>密码安全与签名安全</title>
<link href="/b/sec/sec-cryptography" rel="alternate" type="text/html"/>
<updated>2018-12-20T00:00:00Z</updated>
<summary/>
<published>2018-12-20T00:00:00Z</published>
<content># Signature, 签名
MAC(Message Authentication Code) 与 hash 的区别: http://stackoverflow.com/questions/2836</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-pkg-setuptool</title>
<link href="/b/py/py-pkg-setuptool" rel="alternate" type="text/html"/>
<updated>2018-12-20T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Preface
https://packaging.python.org/tutorials/packaging-projects/

setuptools 与 disutils
1. distu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>BFPRT 算法</title>
<link href="/b/algorithm/algo-topk" rel="alternate" type="text/html"/>
<updated>2018-12-20T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content># Topk 算法之BFPRT算法
基于最大/小堆的TopK 算法复杂度为 $O(n\log n)$

其实还有O(n)的算法 —— BFPRT 基于减治法，采用类似二分法的快排分区减低复杂度。

#</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>关于抢票以及12306 的票仓的sku 设计</title>
<link href="/b/news/ticketing-software" rel="alternate" type="text/html"/>
<updated>2018-12-20T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 为什么抢票这么难?
抢不到票其实太正常了，而且不是你刷的次数多你就有票，而是是你刷得快、带宽大、机器配置好才可能有票。
看看一下数据就知道抢票有多么的疯狂了。
1. 2018.1.12 [1230</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2018-12-19T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Dependency Injector(IoC)</title>
<link href="/b/code/code-di-pattern" rel="alternate" type="text/html"/>
<updated>2018-12-19T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Dependency Injector(IoC)
依赖注入（Dependency Injection）又称控制反转（Inversion of Control）主要用来实现不同模块或类之间的解耦，可</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>吴恩达给你的人工智能第一课</title>
<link href="/b/ai/book-deeplearning" rel="alternate" type="text/html"/>
<updated>2018-12-19T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content>学习观+ 超智能体
https://zhuanlan.zhihu.com/p/27857399

# 吴恩达给你的人工智能第一课
https://mooc.study.163.com/smartSpe</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>egg model</title>
<link href="/b/ria/egg-model" rel="alternate" type="text/html"/>
<updated>2018-12-10T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># egg model
https://eggjs.org/zh-cn/tutorials/sequelize.html

1.config/plugin.js 中引入 egg-sequelize 插</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>人脑学习的本质</title>
<link href="/b/course/1.study" rel="alternate" type="text/html"/>
<updated>2018-12-19T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 学习的本质是什么？
&gt; YJango 在知乎专栏中开了关于机器学习的专栏，本篇章是其中的读后有感。

机器学习的本质就是寻找输入(input) 与输出(output)之间关系的过程, 我们的大脑的</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>linux</title>
<link href="/b/c/ops-pssh" rel="alternate" type="text/html"/>
<updated>2018-12-10T00:00:00Z</updated>
<summary/>
<published>2018-12-10T00:00:00Z</published>
<content># Preface
在工作中，我们可能会有同步操作多台linux 服务器的需要。过去的做法是用for 循环执行: `ssh $ip &lt; work.sh $1 $2 &amp;`

其实，我们还可以借助以下这些</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>网络扫描器nmap、zmap</title>
<link href="/b/net/net-nmap-zmap" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2016-10-10T00:00:00Z</published>
<content># nmap
常见的网络扫描器有 SSS，X-Scan，Superscan等，功能最强大的当然是[Nmap](http://www.aiezu.com/system/linux/linux_nmap_</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Linux Network</title>
<link href="/b/net/net-" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2018-12-07T00:00:00Z</published>
<content># linux tool
网络相关的工具有:

	dns: ip 或 ifconfig，dig
	monitor: netstat -lntp 或 ss -plat
	socket: lsof 查看套</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ifconfig</title>
<link href="/b/net/2.tool-ifconfig" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2018-12-07T00:00:00Z</published>
<content>## ifconfig
ifconfig 是用于查看网卡接口的。
对于linux 来说，它会显示网关gateway(route), 而对于mac 它不会显示网关.
不过
1. mac可以使用通过路由表</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>centos网络配置</title>
<link href="/b/net/1.net-config" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2018-12-07T00:00:00Z</published>
<content># centos网络配置
网络配置分手动设置，自动获取2种方法

## 设置网络链接ifcfg-eth0

	cat /etc/sysconfig/network-scripts/ifcfg-eth0</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac 工具集</title>
<link href="/b/mac/mac-tool" rel="alternate" type="text/html"/>
<updated>2018-12-10T00:00:00Z</updated>
<summary/>
<published>2018-10-10T00:00:00Z</published>
<content># Preface
本文是我所用的mac 工具集大杂烩。

一些mac osx 能做而linux 桌面级OS 目前不能做的事情：

- mac 支持全局readline , 字符编辑的效率非常非常高(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>test</title>
<link href="/b/c/ops-benchmark" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2018-12-07T00:00:00Z</published>
<content># Preface

性能/压力测试的内涵：

	基准/基线测试 base line testing / benchmark testing
	负载测试 load testing
	压力测试 stre</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>tcp/ip 协议</title>
<link href="/b/net/net-tcpip" rel="alternate" type="text/html"/>
<updated>2018-12-19T00:00:00Z</updated>
<summary/>
<published>2011-11-11T00:00:00Z</published>
<content># 互联网协议栈
分为链路层(link), 网络层(Network), 传输层(Transport), 应用层(Application)

应用层
	DHCP DHCPv6 DNS FTP Gophe</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>“第一次”面试</title>
<link href="/b/news/interview" rel="alternate" type="text/html"/>
<updated>2018-12-07T00:00:00Z</updated>
<summary/>
<published>2018-12-06T00:00:00Z</published>
<content>两年多前裸辞，两年以后又裸面，过程还真是尴尬。总结下我的失败之处：
1. 态度太敷衍。上午在雪场，下午才穿着一身的装备就匆匆赶到百度面试，什么也没换，有些不得体。
2. 没有提前准备。话说工作了这么多</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Vue 组件</title>
<link href="/b/ria/vue-component" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-07-15T00:00:00Z</published>
<content># Vue 组件

    &lt;div id="app-7"&gt;
    &lt;ol&gt;
        &lt;todo-item v-for="item in groceryList" v-bind:todo="</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Vue Cli 使用</title>
<link href="/b/ria/vue-cli" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Vue Cli 使用
Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供：

1. 通过 @vue/cli 搭建交互式的项目`脚手架`: `vue create`
2. 通过 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js charts</title>
<link href="/b/ria/js-chart" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-12-06T00:00:00Z</published>
<content># Preface
http://socialcompare.com/en/comparison/javascript-graphs-and-charts-libraries

# chartjs
h</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>风险与质量管理</title>
<link href="/b/em/em-risk-quality" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-12-06T00:00:00Z</published>
<content># 风险管理(Project Risk management)
风险管理是： 为最好地达到项目目标，参与者通过风险识别、风险分析、风险评估，并以此为基础合理地*使用多种管理方法、技术和手段*对项目活动</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>写论文要用到的网站</title>
<link href="/b/em/em-paper" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 写论文要用到的网站
## 参考文献格式生成
https://www.bigan.net/reference/

## 查重
http://www.paperyy.com/ 和
http://www</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>五大过程组，十大知识领域</title>
<link href="/b/em/em-" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 五大过程组，十大知识领域
https://www.jianshu.com/p/33dda2e06225

# PM 项目管理(10大)
&gt; 管理制度+(掌握管理方法的)人+管理信息系统
1. 项目</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2018-12-02T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js copy to clipboard</title>
<link href="/b/ria/js-dom-clipboard" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-05-30T00:00:00Z</published>
<content># js copy to clipboard
&gt; http://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Sth. About Mobile Communication</title>
<link href="/b/life/life-mobile" rel="alternate" type="text/html"/>
<updated>2018-12-02T00:00:00Z</updated>
<summary/>
<published>2018-12-02T00:00:00Z</published>
<content># Preface
&gt; ps: 绝大部分业务在月末是无法办理的.

# 大宝卡
移动大王卡、联通大王卡和电信超牛卡、到底谁划算?
https://zhuanlan.zhihu.com/p/242492</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>时间管理工具</title>
<link href="/b/em/em-time" rel="alternate" type="text/html"/>
<updated>2018-12-06T00:00:00Z</updated>
<summary/>
<published>2018-12-06T00:00:00Z</published>
<content># 时间管理工具
1. 双代号网络计划 (进度网络图)
https://www.jianshu.com/p/c94701d8bfd2

1. 双代号时标网络计划 
https://wenku.baid</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>同一主体账号迁移</title>
<link href="/b/wx/wx-account" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-11-30T00:00:00Z</published>
<content># 同一主体账号迁移
http://kf.qq.com/faq/170217RjMjQz170217buuIZj.html
https://kf.qq.com/faq/170221uQ7Vz21702</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>群共享</title>
<link href="/b/wx/qq-group" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-11-30T00:00:00Z</published>
<content># 群共享
http://qun.qzone.qq.com/group#!/927331255/share
</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-pattern</title>
<link href="/b/vim/vim-pattern" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Preface

# pattern

	:h pattern

## charlist
Character classes

	\s	whitespace character: &lt;Space&gt; </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>matplotlib</title>
<link href="/b/py/py-math-matplot" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># matplotlib

&gt; 原文:
http://www.labri.fr/perso/nrougier/teaching/matplotlib/
&gt; 译文:
http://liam0205.me</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>wireshark</title>
<link href="/b/net/net-sniffer-wireshark" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># wireshark
Refer : http://www.bo56.com/tcpdump-%E5%92%8C-wireshark%E7%BB%84%E5%90%88%E6%8B%B3%EF%BC</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>net-netstat</title>
<link href="/b/net/net-netstat" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface
- netstat
- ss 参数形式如netstat

# netstat
&gt; http://billie66.github.io/TLCL/book/zh/chap17.htm</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>biology</title>
<link href="/b/course/biology" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface
缓步动物门 具有全部四种隐生（Cryptobiosis）性（即Anhydrobiosis、Cryobiosis、Osmobiosis及Anoxybiosis），能够在恶劣环境下停止</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-process-lsof</title>
<link href="/b/c/ops-process-lsof" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># lsof
[/p/linux-process-lsof](/p/linux-process-lsof)

List Open File

## format

	-n  inhibits  the</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>社保及养老保险</title>
<link href="/b/life/life-pension" rel="alternate" type="text/html"/>
<updated>2018-11-04T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 重要

## 北京社保代理
代缴社保和在公司缴纳的社保都是一样的: 五险:三金包括社保金（养老保险，失业保险）、医保金（医疗保险，工伤保险，生育保险）、还有住房公积金。

蚂蚁HR(上海): 技术</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ADHD：分心者的自我认知训练</title>
<link href="/b/life/adhd" rel="alternate" type="text/html"/>
<updated>2018-11-30T00:00:00Z</updated>
<summary/>
<published>2018-11-04T00:00:00Z</published>
<content># 前言
我是从去年开始关注到ADHD的，然后参加了北医六院潘医生组织的ADHD 团体行为认知训练。

本想训练课快要结束之时，对本期训练及ADHD 本身做一个总结。
但是我发现 [ADHD？没什么大</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>算法分治法(divide and conquer)</title>
<link href="/b/algorithm/2.divide-conquer" rel="alternate" type="text/html"/>
<updated>2018-11-01T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content># 算法分治法(divide and conquer)
fibonacii 可以用分治法来做，复杂度非常高.$O(2^n)$

## fibonacii numbers: 
fibonacii num</content>
</entry></feed>