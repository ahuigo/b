<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2020-01-17T17:23:58Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>html5 笔记</title>
<link href="/b/ria/js-dom-html5" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2020-01-17T00:00:00Z</published>
<content># Tag

## Forms
属性

    enctype="multipart/form-data"
        default content-type: application/x-ww</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>font</title>
<link href="/b/ria/js-css-font" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># font
like bootstrap

    @font-face {
    font-family: 'Glyphicons Halflings';

    src: url('../f</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2020-01-17T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>TS ignore type when import module</title>
<link href="/b/ria/ts/ts-ignore" rel="alternate" type="text/html"/>
<updated>2020-01-14T00:00:00Z</updated>
<summary/>
<published>2020-01-14T00:00:00Z</published>
<content># TS ignore module type
e.g.

    // @ts-ignore
    import Brush from "@antv/g2-brush";</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/docker-" rel="alternate" type="text/html"/>
<updated>2020-01-14T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js 字符串大全</title>
<link href="/b/ria/js-str" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2015-03-15T00:00:00Z</published>
<content># Js 字符串大全
字符定义与python 一样, 而且不区分双引号：

    '\x00' == '\u0000'
	'\x31' == "\x31"

	'好' === '\u597D' //</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js Array 整理</title>
<link href="/b/ria/js-array" rel="alternate" type="text/html"/>
<updated>2020-01-10T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Js Array 整理
array 不像string 是primitive value, 所以length 可以缩短放大array。

	arr = [1,2,3]
	arr.length = 1</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>test</title>
<link href="/b/c/ops-benchmark" rel="alternate" type="text/html"/>
<updated>2020-01-08T00:00:00Z</updated>
<summary/>
<published>2020-01-08T00:00:00Z</published>
<content># Preface

性能/压力测试的内涵：

	基准/基线测试 base line testing / benchmark testing
	负载测试 load testing
	压力测试 stre</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>tcpdump</title>
<link href="/b/net/net-tcpdump" rel="alternate" type="text/html"/>
<updated>2020-01-04T00:00:00Z</updated>
<summary/>
<published>2020-01-04T00:00:00Z</published>
<content># tcpdump
example: https://www.rationallyparanoid.com/articles/tcpdump.html
book:

学术的说，tcpdump是一种嗅探</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>netcat</title>
<link href="/b/net/net-ncat" rel="alternate" type="text/html"/>
<updated>2020-01-04T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># netcat,
[nc](http://www.oschina.net/translate/linux-netcat-command?p=2#comments)

# nc
Netcat 或者叫 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 字典</title>
<link href="/b/py/py-var-dict" rel="alternate" type="text/html"/>
<updated>2020-01-03T00:00:00Z</updated>
<summary/>
<published>2020-01-03T00:00:00Z</published>
<content># Dict

    key='city'
	dic = {'x': 1, 'y': 2, 2:100, key:'bj'}
	del dict['x']
    dict.pop(2) # key</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>curl manual</title>
<link href="/b/c/ops-curl" rel="alternate" type="text/html"/>
<updated>2020-01-08T00:00:00Z</updated>
<summary/>
<published>2020-01-08T00:00:00Z</published>
<content># curlt to python/node/go...
curl 转换器: https://curl.trillworks.com/

# Usage

	-F,--form
	-D- Dump t</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>收集了下UI 动画特效</title>
<link href="/b/ui/ui-animation" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2019-02-09T00:00:00Z</published>
<content># UI 动画特效
https://medium.com/@ann.green/loading-indicators-e9d9ac9680b

# Materia UI 
https://materi</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>tcp/ip 协议</title>
<link href="/b/net/net-tcpip" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2011-11-11T00:00:00Z</published>
<content># 互联网协议栈
分为链路层(link), 网络层(Network), 传输层(Transport), 应用层(Application)

应用层
	DHCP DHCPv6 DNS FTP Gophe</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 的math 语法</title>
<link href="/b/py/math/py-math" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2019-12-31T00:00:00Z</published>
<content># number

    0x61
    0o77
    0b11

## random

	import random
	random.randint(3,8)

	# 主要用于密码强随机
	</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>sequence of numbers</title>
<link href="/b/math/math-num-seq" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># sequence of numbers

## 等差数列(arithmetic progression (AP) or arithmetic sequence)
$S_n=n(a_n+a_1)/2</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>hadoop 介绍</title>
<link href="/b/db/had-" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># hadoop 介绍
http://www.cnblogs.com/sunddenly/p/3977011.html
hadoop 大数据时代的宠儿-池建强
http://www.cnblogs.c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>install java</title>
<link href="/b/java/1.java-install" rel="alternate" type="text/html"/>
<updated>2019-12-27T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># install java
    JRE： Java Runtime Environment
    JDK：Java Development Kit 
    JDK = JRE(JVM)+ja</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>JS Math</title>
<link href="/b/ria/js-math" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Math

	E	返回算术常量 e，即自然对数的底数（约等于2.718）。
	LN2	返回 2 的自然对数（约等于0.693）。
	LN10	返回 10 的自然对数（约等于2.302）。
	LOG</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>grep &amp; ag 的使用</title>
<link href="/b/c/shell-grep" rel="alternate" type="text/html"/>
<updated>2019-12-27T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># grep &amp; ag 的使用
# ag
ag 比ack/grep 还快

    brew install the_silver_searcher


## 自动忽略`.gitinore/.hgig</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 时间函数的用法笔记</title>
<link href="/b/py/py-time" rel="alternate" type="text/html"/>
<updated>2019-12-31T00:00:00Z</updated>
<summary/>
<published>2018-04-02T00:00:00Z</published>
<content># time 工具
time 提供基本的时间，sleep

	import time
	time.time()
		19972314124.05238
        time.localetime(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 字符处理</title>
<link href="/b/py/py-str" rel="alternate" type="text/html"/>
<updated>2019-12-25T00:00:00Z</updated>
<summary/>
<published>2017-08-09T00:00:00Z</published>
<content># Python 字符处理
- serialize
见/py/py-serial.md

# String
same as js:

	print "a\nb" ;# The character he</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js dom 笔记</title>
<link href="/b/ria/js-dom" rel="alternate" type="text/html"/>
<updated>2019-12-15T00:00:00Z</updated>
<summary/>
<published>2016-01-23T00:00:00Z</published>
<content># Js dom 笔记
    document.documentElement ;//html
    document.body;  //html

# Device
## Navigator
n</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>code split</title>
<link href="/b/webpack/12.webpack-codesplit-and-lazy" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-06T00:00:00Z</published>
<content># code split
有三种常用的代码分离方法：

    入口起点：使用 entry 配置手动地分离代码。
    防止重复：使用 CommonsChunkPlugin 去重和分离 chunk。</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>git 使用之日志、数据恢复</title>
<link href="/b/git/git-log" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2019-12-06T00:00:00Z</published>
<content># 日志过滤

## by branch
1. `^` means not in
1. `A..B` means from A to B(exclude A)

	git log [repo/]bra</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang func</title>
<link href="/b/go/16.go-func" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># define func
1. 不支持嵌套nested, 重载overload 和 
2. 不支持默认参数default parameter
3. 支持不定长变参数
4. 多返回值
5. 支持命名返</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>git submodule</title>
<link href="/b/git/git-submodule" rel="alternate" type="text/html"/>
<updated>2019-12-06T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># git submodule
## add

	$ git submodule add https://github.com/ahuigo/c-lib
	Cloning into 'c-lib'..</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-func</title>
<link href="/b/py/py-func" rel="alternate" type="text/html"/>
<updated>2019-11-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

函数式编程

# call func
getattr(foo, 'bar')()
locals()['bar']()
globals()['bar']()

## exec fu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python 的语法</title>
<link href="/b/py/py-expr" rel="alternate" type="text/html"/>
<updated>2020-01-10T00:00:00Z</updated>
<summary/>
<published>2018-03-01T00:00:00Z</published>
<content># 多条件compare
多条件比较

    &gt;&gt;&gt; 5&lt;i&lt;100
    &gt;&gt;&gt; 1 &lt; 3 &gt;= 3 &gt; 1==1 &lt;100
    True

# 条件和循环

## try finnaly</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 的索引</title>
<link href="/b/db/pg-index" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre Index
本文主要围绕postgre 总结一下索引, 参考：[PostgreSQL 9种索引的原理和应用场景](https://yq.aliyun.com/articles/11</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>PG help</title>
<link href="/b/db/pg-help" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># PG help

    \h
    \?

show function

    \sf[+]  FUNCNAME       show a function's definition
   </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre expression</title>
<link href="/b/db/pg-expr" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-09-08T00:00:00Z</published>
<content># Postgre expression


# variable 
## variable as table
https://stackoverflow.com/questions/35559093</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>FUNCTION</title>
<link href="/b/db/pg-ddl" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># shell

## connect shell
默认同时支持 unix domain socket + ip/port net socket

    psql DBNAME USERNAME
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre User and Authentication</title>
<link href="/b/db/pg-ddl-user" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># help
    \h alter
    ALTER ROLE name RENAME TO new_name

# Postgre User and Authentication
    ps</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre 安装\配置\管理</title>
<link href="/b/db/pg-ddl-install" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre 安装\配置\管理
    rpm -Uvh https://yum.postgresql.org/10/redhat/rhel-7-x86_64/pgdg-centos10-10-</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre SQL function</title>
<link href="/b/db/pg-ddl-function" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2019-06-20T00:00:00Z</published>
<content># Postgre SQL function
## 基本语法
必须指定语言 `LANGUAGE plpsql|sql`, `$$` 是分割符

    CREATE OR REPLACE FUNCTI</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre CRUD</title>
<link href="/b/db/pg-crud" rel="alternate" type="text/html"/>
<updated>2019-11-29T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre CRUD
## string or keyword
    select 'string';
    select "count"(1) from "table_name"

##</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>React Error 边界</title>
<link href="/b/ria/react-debug" rel="alternate" type="text/html"/>
<updated>2019-11-28T00:00:00Z</updated>
<summary/>
<published>2019-09-07T00:00:00Z</published>
<content># React Error 边界
React 提供Error 捕获，但错误边界无法捕获以下场景中产生的错误(本质就是try-catch)：

    事件处理（了解更多）
    异步代码（例如 se</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2020-01-13T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry></feed>