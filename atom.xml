<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2018-11-04T19:36:54Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>社保及养老保险</title>
<link href="/b/life/life-pension" rel="alternate" type="text/html"/>
<updated>2018-11-04T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 重要

## 北京社保代理
代缴社保和在公司缴纳的社保都是一样的: 五险:三金包括社保金（养老保险，失业保险）、医保金（医疗保险，工伤保险，生育保险）、还有住房公积金。

蚂蚁HR(上海): 技术</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ADHD：分心者的自我认知训练</title>
<link href="/b/life/adhd" rel="alternate" type="text/html"/>
<updated>2018-11-04T00:00:00Z</updated>
<summary/>
<published>2018-11-04T00:00:00Z</published>
<content># 前言
我是从去年开始关注到ADHD的，然后参加了北医六院潘医生组织的ADHD 团体行为认知训练。

本想训练课快要结束之时，对本期训练及ADHD 本身做一个总结。
但是我发现 [ADHD？没什么大</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>算法分治法(divide and conquer)</title>
<link href="/b/algorithm/2.divide-conquer" rel="alternate" type="text/html"/>
<updated>2018-11-01T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content># 算法分治法(divide and conquer)
fibonacii 可以用分治法来做，复杂度非常高.$O(2^n)$

## fibonacii numbers: 
fibonacii num</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority

	style &gt; id &gt; hover(鼠标悬停) &gt; class &gt; tag
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>搜索附近的地点</title>
<link href="/b/math/geo-distance-geohash" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-08T00:00:00Z</published>
<content># 搜索附近的地点
我们经常在地图搜索附近的地点。这背后就涉及二维数据的搜索。

一维数据搜索我们常常用B 树平衡树这种结构，然后用二分法去添加、删除、搜索, 复杂度 $O(log n)$

地图这种</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>shell 环境变量</title>
<link href="/b/c/shell-var-env" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-08T00:00:00Z</published>
<content># Variable

	let num++
	let ++num

	declare -i num
	num+=1

	((num++))

## readonly

	x=6
	readonly </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Shell Programming</title>
<link href="/b/c/shell-" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2014-03-05T00:00:00Z</published>
<content># Shell Programming

# Signal, 信号(trap)
Refer to:
http://billie66.github.io/TLCL/book/zh/chap37.html</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>计算球面两点的距离</title>
<link href="/b/math/geo-distance" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 计算球面两点的距离
球面坐标(也就是经纬度)对应的直角坐标为

- $R*sin(a)$
- $R*cos(a)cos(m)$
- $R*cos(a)sin(m)$

假设球面半径R=1, 两点A</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-08T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>command</title>
<link href="/b/ria/node-npm" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># command

    npm list -g; # global
    npm list; # local
    npm dedupe -g; # Reduce duplication

</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>git 使用之日志、数据恢复</title>
<link href="/b/git/git-log" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-08T00:00:00Z</published>
<content># 日志过滤

## by branch
1. `^` means not in
1. `A..B` means from A to B(exclude A)

	git log [repo/]bra</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>圆周率算法</title>
<link href="/b/algorithm/algorithm-pi" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content># 圆周率算法
- [pi]
- [梅钦类公式]
- [Machin's formula Proof]
- http://en.wikipedia.org/wiki/Arithmetic%E2%80%</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>前端自动化测试</title>
<link href="/b/ria/js-test" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-10-07T00:00:00Z</published>
<content># 前端自动化测试
原文: http://fex.baidu.com/blog/2015/07/front-end-test/
前端自动化测试可以在几个方向进行尝试：

- 界面回归测试 测试界面是否</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>写npm 包</title>
<link href="/b/ria/node-npm-pkg" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 写npm 包
1. 生成包信息package.json
    npm init
2. https://www.npmjs.com/ 注册账号
3. `npm adduser` 添加账号
3. `</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>原生js 写的SlideUp、SlideDown 教程(收藏)</title>
<link href="/b/ria/js-dom-event-slide" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-10-07T00:00:00Z</published>
<content># 原生js 写的SlideUp、SlideDown 教程(收藏)
http://www.codeasily.net/course/plugin_course/4/</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>二叉查找树和红黑树</title>
<link href="/b/algorithm/ds-binary-search-tree" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-09-26T00:00:00Z</published>
<content># 二叉查找树和红黑树
二叉查找树（Binary Search Tree），也称二叉搜索树、有序二叉树（ordered binary tree），排序二叉树（sorted binary tree），是</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 时间函数的用法笔记</title>
<link href="/b/py/py-time" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-04-02T00:00:00Z</published>
<content># time 工具
time 提供基本的时间，sleep

	import time
	time.time()
		19972314124.05238
        time.localetime(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>LibSvm</title>
<link href="/b/algorithm/algorithm-libsvm" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2014-03-03T00:00:00Z</published>
<content># SVM
支持向量机（Support vector machine）是在统计学习理论的基础上发展起来的新一代学习算法，它在文本分类、手写识别、图像分类、生物信息学等领域中获行较好的应用。  
如果你</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>BFPRT 算法</title>
<link href="/b/algorithm/algo-topk" rel="alternate" type="text/html"/>
<updated>2018-10-07T11:12:17+00:00</updated>
<summary/>
<published>2018-10-07T11:12:17+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js-time</title>
<link href="/b/ria/js-time" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:53:46+00:00</updated>
<summary/>
<published>2018-10-07T00:53:46+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Shell 变量之数据类型</title>
<link href="/b/c/shell-var" rel="alternate" type="text/html"/>
<updated>2018-10-08T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Shell 变量之数据类型
## export

	unset PYTHONPATH

## String, 字符串

### count_chars

	echo 'ahui ahui' | g</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>coder试题:有几个bing?</title>
<link href="/b/algorithm/game-countword" rel="alternate" type="text/html"/>
<updated>2018-10-06T22:40:20+00:00</updated>
<summary/>
<published>2018-10-06T22:40:20+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>字符编码简介</title>
<link href="/b/code/code-character" rel="alternate" type="text/html"/>
<updated>2018-10-06T21:21:19+00:00</updated>
<summary/>
<published>2018-10-06T21:21:19+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>关于抢票以及12306 的票仓的sku 设计</title>
<link href="/b/news/ticketing-software" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 为什么抢票这么难?
抢不到票其实太正常了，而且不是你刷的次数多你就有票，而是是你刷得快、带宽大、机器配置好才可能有票。
看看一下数据就知道抢票有多么的疯狂了。
1. 2018.1.12 [1230</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>查找两有序数组中第N 大的值</title>
<link href="/b/algorithm/algorithm-find-the-nth-of-2-sorted-array" rel="alternate" type="text/html"/>
<updated>2018-10-06T20:48:17+00:00</updated>
<summary/>
<published>2018-10-06T20:48:17+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Analysis of Algorithm</title>
<link href="/b/algorithm/1.time-complex" rel="alternate" type="text/html"/>
<updated>2018-10-07T08:23:21+00:00</updated>
<summary/>
<published>2018-10-07T08:23:21+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>广度优先算法(BFS)</title>
<link href="/b/algorithm/algorithm-bfs" rel="alternate" type="text/html"/>
<updated>2018-10-06T20:36:29+00:00</updated>
<summary/>
<published>2018-10-06T20:36:29+00:00</published>
<content/>
</entry><entry xml:base="https://ahuigo.github.io">
<title>杨氏矩阵（Young Tableau）的topK 算法</title>
<link href="/b/algorithm/algo-young-tableau-topk" rel="alternate" type="text/html"/>
<updated>2018-10-07T00:53:46+00:00</updated>
<summary/>
<published>2018-10-07T00:53:46+00:00</published>
<content/>
</entry></feed>