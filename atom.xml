<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2020-04-09T22:11:58Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>py-func</title>
<link href="/b/py/py-func" rel="alternate" type="text/html"/>
<updated>2020-04-08T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

函数式编程

# call func
getattr(foo, 'bar')()
locals()['bar']()
globals()['bar']()

## exec fu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2020-04-09T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-pkg-setuptool</title>
<link href="/b/py/py-pkg-setuptool" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Preface
https://packaging.python.org/tutorials/packaging-projects/

setuptools 与 disutils
1. distu</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-argv</title>
<link href="/b/py/py-argv" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface
- click
click 之于argparse/argv, 相当于requests 之于urllib

命令行程序开发

	asciimatics：跨平台，全屏终端包（即鼠标/键</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>current status of China</title>
<link href="/b/life/covid-19" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2020-04-03T00:00:00Z</published>
<content># current status of China
China has 829 million Internet users

# hideing cases?
Hide cases???
In Ch</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ina is only the first country to detect the virus. If the first country which detect and report the virus should responsible for it, then no country will report the virus.</title>
<link href="/b/life/covid-19-china" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2020-04-03T00:00:00Z</published>
<content>China is only the first country to detect the virus. If the first country which detect and report th</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>go str</title>
<link href="/b/go/go-str-serial" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2019-05-06T00:00:00Z</published>
<content># go json

## encode marshal bytes

    import "encoding/json"
    type response2 struct {
        P</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim-motion</title>
<link href="/b/vim/vim-motion" rel="alternate" type="text/html"/>
<updated>2020-03-31T00:00:00Z</updated>
<summary/>
<published>2020-03-31T00:00:00Z</published>
<content># Motion, Movement
Movement 移动光标、字符，Vim 最核心的功能操作

    基本 hjkl
    单词 
        小单词wbe
            w: </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>go 的变量</title>
<link href="/b/go/7.go-var" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2016-09-27T00:00:00Z</published>
<content># go print
## println
只能用于string, int..

    # no need import fmt
    println(xyz)

## fmt.Println
a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>map</title>
<link href="/b/go/7.go-var-map" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># map

## define map
键必须是⽀支持相等运算符 (==、!=) 类型，⽐比如 number、string、 pointer、array、struct，以及对应的 interface</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang 指针</title>
<link href="/b/go/13.go-pointer" rel="alternate" type="text/html"/>
<updated>2020-03-31T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Pointers
1. 支持指针类型 *T,指针的指针 **T,以及包含包名前缀的 `*&lt;package&gt;.T`。
2. 不能对指针做加减法等运算。
3. 默认是`nil`, 没有`NULL`

</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vim plug 插件系统</title>
<link href="/b/vim/nvim-plugin" rel="alternate" type="text/html"/>
<updated>2020-03-30T00:00:00Z</updated>
<summary/>
<published>2018-05-09T00:00:00Z</published>
<content># vim plug 插件系统

    curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
        ht</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Requests</title>
<link href="/b/py/py-aiohttp" rel="alternate" type="text/html"/>
<updated>2020-03-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Requests
Refer to: http://aiohttp.readthedocs.io/en/stable/tutorial.html#aiohttp-tutorial
```
impo</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>server</title>
<link href="/b/py/py-aiohttp-server" rel="alternate" type="text/html"/>
<updated>2020-03-30T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># server
异步编程要小心循环阻塞, 不可以使所有任务task被阻塞的函数：
1. time.sleep(10)

## simple server

    from aiohttp impo</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang 的结构体</title>
<link href="/b/go/go-struct" rel="alternate" type="text/html"/>
<updated>2020-03-31T00:00:00Z</updated>
<summary/>
<published>2019-03-24T00:00:00Z</published>
<content># Golang Notes: struct
struct 是值类型，slice 是引用类型(指针), 以下赋值方法是按值的

    type A struct{x int; b string}
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>golang help</title>
<link href="/b/go/11.go-help" rel="alternate" type="text/html"/>
<updated>2020-03-30T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># help command
Use "go help [command]" for more information about a command.

    go help fmt

# go </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>golang pkg的使用</title>
<link href="/b/go/2.go-pkg-dev" rel="alternate" type="text/html"/>
<updated>2020-04-03T00:00:00Z</updated>
<summary/>
<published>2016-09-27T00:00:00Z</published>
<content># gopath 结构
1. 参考How to Write Go Code https://golang.org/doc/code.html

2. 环境变量$ go env

## workspac</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>path</title>
<link href="/b/vsc/vsc-path" rel="alternate" type="text/html"/>
<updated>2020-03-28T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># path
Available variables which can be used inside of strings.

    // ${workspaceRoot}: the root f</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>hash</title>
<link href="/b/sec/sec-hash" rel="alternate" type="text/html"/>
<updated>2020-03-28T00:00:00Z</updated>
<summary/>
<published>2020-03-28T00:00:00Z</published>
<content># Preface

# hash in php
crc32() - Calculates the crc32 polynomial of a string
hash() - Generate a h</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-debug</title>
<link href="/b/py/py-debug" rel="alternate" type="text/html"/>
<updated>2020-04-09T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface
1. exception
2. 调试包括print, assert, 
3. 使用logging/sentry/q(强烈推荐)
4. pdb/ipdb
3. perf 性能
1. </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js notes</title>
<link href="/b/ria/js-obj" rel="alternate" type="text/html"/>
<updated>2020-03-26T00:00:00Z</updated>
<summary/>
<published>2020-03-26T00:00:00Z</published>
<content># Object

## isEmpty
    ECMA 7+:
    Object.entries(obj).length === 0 &amp;&amp; obj.constructor === Object</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js 的函数</title>
<link href="/b/ria/js-func" rel="alternate" type="text/html"/>
<updated>2020-03-26T00:00:00Z</updated>
<summary/>
<published>2017-07-11T00:00:00Z</published>
<content># async
## generator
    function* foo() {
        yield 11
        return 22;//没用
    }
    f=foo()</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 性能分析</title>
<link href="/b/py/py-profiler" rel="alternate" type="text/html"/>
<updated>2020-03-26T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># python 性能分析
介绍几个分析工具：
- cProfile
类似于xdebug cachegrind profiler 性能画像
- py-spy python 版的top
    - py</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>vscode 笔记</title>
<link href="/b/vsc/vsc-shortcut" rel="alternate" type="text/html"/>
<updated>2020-03-17T00:00:00Z</updated>
<summary/>
<published>2018-01-03T00:00:00Z</published>
<content># vscode
cmd+p

    ?   help
    @{symbol} jump to symbol 
    cmd+shift+m 切换问题面板
    cmd+j 切换集成终端(c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-device</title>
<link href="/b/c/ops-device" rel="alternate" type="text/html"/>
<updated>2020-03-17T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Preface

# cpu

## proc/

	grep -c ^processor /proc/cpuinfo

## lscpu

	lscpu | grep -E ^(?&lt;=CPU\(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>安全的帐号设计</title>
<link href="/b/sec/sec-account" rel="alternate" type="text/html"/>
<updated>2020-03-26T00:00:00Z</updated>
<summary/>
<published>2020-03-26T00:00:00Z</published>
<content># Preface
帐号设计可以涉及到很多细节，本文主要从安全的角度作一个总结:

1. password 安全
1. sid 的设计
3. 内部Api 授权
4. SSO 单点登录

# passw</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-http</title>
<link href="/b/py/py-http" rel="alternate" type="text/html"/>
<updated>2020-04-09T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

# urllib
urllib2 is deprecated, use requests instead , except: `urllib.parse.urlsplit/url</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mac 工具集</title>
<link href="/b/mac/mac-tool" rel="alternate" type="text/html"/>
<updated>2020-03-26T00:00:00Z</updated>
<summary/>
<published>2018-10-10T00:00:00Z</published>
<content># Preface
本文是我所用的mac 工具集大杂烩。

一些mac osx 能做而linux 桌面级OS 目前不能做的事情：

- mac 支持全局readline , 字符编辑的效率非常非常高(</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre CRUD</title>
<link href="/b/db/pg-crud" rel="alternate" type="text/html"/>
<updated>2020-03-14T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre CRUD
## string or keyword
    select 'string';
    select "count"(1) from "table_name"

##</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>golang pkg的使用</title>
<link href="/b/go/2.go-pkg" rel="alternate" type="text/html"/>
<updated>2020-03-10T00:00:00Z</updated>
<summary/>
<published>2016-09-27T00:00:00Z</published>
<content># 结构
1. 参考How to Write Go Code https://golang.org/doc/code.html

2. 环境变量$ go env

## workspace
可以有多个</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>brew dev</title>
<link href="/b/mac/mac-brew-dev" rel="alternate" type="text/html"/>
<updated>2020-03-04T00:00:00Z</updated>
<summary/>
<published>2020-03-04T00:00:00Z</published>
<content># Preface

# rule
brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 的list/tuple 笔记</title>
<link href="/b/py/py-var-list" rel="alternate" type="text/html"/>
<updated>2020-02-25T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># list and tuple
因为tuple 是增加删除元素的不可变的list(数据可以变)，所以代码更安全。
如果可能，能用tuple代替list就尽量用tuple。

	list = [1,2</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>python 的正则表达式</title>
<link href="/b/py/py-str-regex" rel="alternate" type="text/html"/>
<updated>2020-02-24T00:00:00Z</updated>
<summary/>
<published>2020-02-24T00:00:00Z</published>
<content># regex 语法

	import re
    re.compile(pattern, [,modifier]).match(str)
    re.match(pattern, str[, m</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2020-02-11T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority
你应该知道的一些事情——CSS权重
https://www.w3cplus.com/</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>html5 笔记</title>
<link href="/b/ria/js-dom-html5" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2020-01-17T00:00:00Z</published>
<content># Tag

## Forms
属性

    enctype="multipart/form-data"
        default content-type: application/x-ww</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>font</title>
<link href="/b/ria/js-css-font" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># font
like bootstrap

    @font-face {
    font-family: 'Glyphicons Halflings';

    src: url('../f</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2020-01-17T00:00:00Z</updated>
<summary/>
<published>2020-01-17T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>TS ignore type when import module</title>
<link href="/b/ria/ts/ts-ignore" rel="alternate" type="text/html"/>
<updated>2020-01-14T00:00:00Z</updated>
<summary/>
<published>2020-01-14T00:00:00Z</published>
<content># TS ignore module type
e.g.

    // @ts-ignore
    import Brush from "@antv/g2-brush";</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/docker-" rel="alternate" type="text/html"/>
<updated>2020-03-14T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry></feed>