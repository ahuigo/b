<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title>Ahuigo 的网络日志</title>
<link href="https://ahuigo.github.io/b/atom.xml" rel="self" type="application/atom+xml"/>
<updated>2019-08-15T15:25:21Z</updated>
<subtitle>ahuigo's Blog</subtitle>
<entry xml:base="https://ahuigo.github.io">
<title>Postgre 的索引</title>
<link href="/b/db/postgre-index" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Postgre Index
本文主要围绕postgre 总结一下索引, 参考：[PostgreSQL 9种索引的原理和应用场景](https://yq.aliyun.com/articles/11</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>JS worker</title>
<link href="/b/ria/js-worker" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-14T00:00:00Z</published>
<content># JS worker
分为web worker 与service worker(只能用于https/localhost)

限制：
1. 不能传DOM
2. 不能传function/prototyp</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js dom 笔记</title>
<link href="/b/ria/js-dom" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2016-01-23T00:00:00Z</published>
<content># Js dom 笔记
    document.documentElement ;//html
    document.body;  //html
# Device
## Navigator
na</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>net-route</title>
<link href="/b/net/net-route" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface
1. traceroute [option] host, 路由经过的节点
    1. -m 10 跳数设置
1. check route
    0. netstat -nr
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>防火墙</title>
<link href="/b/net/net-iptables" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-15T00:00:00Z</published>
<content># 原理
参考[Iptables防火墙原理详解](http://segmentfault.com/a/1190000002540601)

## netfilter/iptables
Netfilte</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>net-dns</title>
<link href="/b/net/net-dns" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

主机名.次级域名.顶级域名.根域名

  host.sld.tld.root

  A记录：服务器 IP
  AAAA：服务器 IPv6 的地址。
  CNAME记录： 你空间商</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Mac shortcuts</title>
<link href="/b/mac/mac-shortcuts" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-15T00:00:00Z</published>
<content>
# mac 快捷键使用整理

## Karabiner + Seil, 定制全键盘
一开始是左手手指有点酸，估计是尾指按键盘左边的Ctrl键次数有点多，为此把左边的Ctrl键盘跟CapsLock对换</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Docker exec nsenter</title>
<link href="/b/arch/docker-exec" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-15T00:00:00Z</published>
<content># Docker exec nsenter
## nsenter工具进入docker容器
1. docker exec: 直接执行容器命令
2. docker attach: 类似exec, 但是多个</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>CSS 笔记</title>
<link href="/b/ria/js-css" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2017-12-12T00:00:00Z</published>
<content># CSS 笔记
css/html5/js 兼容表
http://caniuse.com/

# priority

	style &gt; id &gt; hover(鼠标悬停) &gt; class &gt; tag
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>语法总原则</title>
<link href="/b/eng/eng-sentence" rel="alternate" type="text/html"/>
<updated>2019-08-12T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 语法总原则
怎样学好英语语法？
https://www.zhihu.com/question/24485886/answer/54300952
你有什么相见恨晚的英语学习方法
https://ww</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Python email处理</title>
<link href="/b/py/py-email" rel="alternate" type="text/html"/>
<updated>2019-08-04T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Python mail
1. yagmail 高效简单的email工具
2. 邮件收发过程

## yagmail

    import yagmail
    yag = yagmail.SM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Vsc for python</title>
<link href="/b/vsc/vsc-python" rel="alternate" type="text/html"/>
<updated>2019-07-26T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Vsc for python
https://code.visualstudio.com/docs/python/python-tutorial

## go to denifition
1. 安</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js-time</title>
<link href="/b/ria/js-time" rel="alternate" type="text/html"/>
<updated>2019-08-12T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Date Format
&gt; https://zh.wikipedia.org/wiki/ISO_8601

The only format in the spec is a simplified </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>js notes</title>
<link href="/b/ria/js-obj" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-15T00:00:00Z</published>
<content># Object

## isEmpty
    ECMA 7+:
    Object.entries(obj).length === 0 &amp;&amp; obj.constructor === Object</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Event</title>
<link href="/b/ria/js-dom-event" rel="alternate" type="text/html"/>
<updated>2019-08-12T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Event

## DOM MutationObserver
http://javascript.ruanyifeng.com/dom/mutationobserver.html

### DOM</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Js Array 整理</title>
<link href="/b/ria/js-array" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># Js Array 整理
array 不像string 是primitive value, 所以length 可以缩短放大array。

	arr = [1,2,3]
	arr.length = 1</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Git 命令大全</title>
<link href="/b/git/git-" rel="alternate" type="text/html"/>
<updated>2019-07-26T00:00:00Z</updated>
<summary/>
<published>2019-07-26T00:00:00Z</published>
<content># Git 配置

## ConfigFile
1. /etc/gitconfig #git config --system
2. ~/.gitconfig 	#git config --global</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>JS Promise</title>
<link href="/b/ria/js-promise" rel="alternate" type="text/html"/>
<updated>2019-07-26T00:00:00Z</updated>
<summary/>
<published>2018-10-04T00:00:00Z</published>
<content># 递归promise
Promise 是递归的，Reject 不是

    const onResolved = e =&gt; console.log('resolve , ', e );
    c</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>GMT,UTC,DST,CST 各种时间标准</title>
<link href="/b/c/shell-time" rel="alternate" type="text/html"/>
<updated>2019-07-26T00:00:00Z</updated>
<summary/>
<published>2012-07-08T00:00:00Z</published>
<content># 各世界时间标准
我们经常遇到这4种时间：GMT,UTC,DST,CST。google了一下，在此做个小结.

## 格林威治标准时间GMT
含义：「格林威治标准时间」(Greenwich Mean</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>css 布局</title>
<link href="/b/ria/js-css-layout" rel="alternate" type="text/html"/>
<updated>2019-08-12T00:00:00Z</updated>
<summary/>
<published>2018-03-03T00:00:00Z</published>
<content># CSS 布局
&gt; 参考: http://zh.learnlayout.com/position.html

# display
1. block: This makes the element a</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>学习 docker</title>
<link href="/b/arch/arch-docker" rel="alternate" type="text/html"/>
<updated>2019-08-12T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># 什么是Docker
虚拟机是对硬件的虚拟化(需要Hypervisor这个软件层), 而docker （LXC, linux container）是对操作系统的虚拟化。
1. docker 基于li</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>FUNCTION</title>
<link href="/b/db/postgre-ddl" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># shell

## connect shell
默认同时支持 unix domain socket + ip/port net socket

    psql DBNAME USERNAME
 </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>go str</title>
<link href="/b/go/go-str-serial" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2019-05-06T00:00:00Z</published>
<content># go json

## encode marshal bytes

    import "encoding/json"
    type response2 struct {
        P</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>map</title>
<link href="/b/go/7.go-var-map" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># map

## define map
键必须是⽀支持相等运算符 (==、!=) 类型，⽐比如 number、string、 pointer、array、struct，以及对应的 interface</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang func</title>
<link href="/b/go/16.go-func" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># define func
1. 不支持嵌套nested, 重载overload 和 
2. 不支持默认参数default parameter
3. 支持不定长变参数
4. 多返回值
5. 支持命名返</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Aliyun oss</title>
<link href="/b/arch/arch-oss" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2019-04-17T00:00:00Z</published>
<content># oss
OSS开源工具ossutil-增量上传: 
https://yq.aliyun.com/articles/601447

OSS开源工具ossutil-并发
https://yq.aliy</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang fmt</title>
<link href="/b/go/6.go-fmt" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># fmt

- fmt.Println : space, with newline
- fmt.Print : without newline
- fmt.Printf : format

prin</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>golang pkg的使用</title>
<link href="/b/go/2.go-pkg" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2016-09-27T00:00:00Z</published>
<content># 结构
1. 参考How to Write Go Code https://golang.org/doc/code.html

2. 环境变量$ go env

## workspace
可以有多个</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang：Array and slice</title>
<link href="/b/go/10.go-slice-array" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># array vs slice
1. An array has fixed size, `[N]T`
2. a slice is a dynamically-sized. `[]T` 
3. sli</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Postgre User and Authentication</title>
<link href="/b/db/postgre-ddl-user" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># help
    \h alter
    ALTER ROLE name RENAME TO new_name

# Postgre User and Authentication
    ps</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>help</title>
<link href="/b/py/py-db-postgre" rel="alternate" type="text/html"/>
<updated>2019-07-20T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># help
http://initd.org/psycopg/docs/cursor.html

# psycopg2
## conn

    import psycopg2
    import</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Sed 简记</title>
<link href="/b/c/ops-sed" rel="alternate" type="text/html"/>
<updated>2019-08-15T00:00:00Z</updated>
<summary/>
<published>2019-08-15T00:00:00Z</published>
<content># sed 与gsed
grep 与sed 同样是以按行匹配，不过sed 不仅能按行匹配，还能替换字符

&gt;ps: mac 下的sed与linux下的gnu sed有很大的不同，建议安装gsed（如果</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>ops-process-lsof</title>
<link href="/b/c/ops-process-lsof" rel="alternate" type="text/html"/>
<updated>2019-07-19T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># lsof
[/p/linux-process-lsof](/p/linux-process-lsof)

List Open File

## format

	-n  inhibits  the</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>安全的帐号设计</title>
<link href="/b/sec/security-account" rel="alternate" type="text/html"/>
<updated>2019-07-19T00:00:00Z</updated>
<summary/>
<published>2019-07-19T00:00:00Z</published>
<content># Preface
帐号设计可以涉及到很多细节，本文主要从安全的角度作一个总结:

1. password 安全
1. sid 的设计
3. 内部Api 授权
4. SSO 单点登录

# passw</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>py-http</title>
<link href="/b/py/py-http" rel="alternate" type="text/html"/>
<updated>2019-07-19T00:00:00Z</updated>
<summary/>
<published>2018-09-28T00:00:00Z</published>
<content># Preface

# urllib
urllib2 is deprecated, use requests instead , except: `urllib.parse.urlsplit/url</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>gonic</title>
<link href="/b/go/gonic" rel="alternate" type="text/html"/>
<updated>2019-07-19T00:00:00Z</updated>
<summary/>
<published>2019-04-22T00:00:00Z</published>
<content># gonic time
time.Time accept format

    2002-10-02T10:00:00-05:00
    2002-10-02T15:00:00Z
    200</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>Golang Singleton</title>
<link href="/b/go/go-design-single" rel="alternate" type="text/html"/>
<updated>2019-07-19T00:00:00Z</updated>
<summary/>
<published>2019-04-29T00:00:00Z</published>
<content># Golang Singleton
Non thread Safe: instantiated share by thread, not atomic

    //instantiated and</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>golang string</title>
<link href="/b/go/9.go-str" rel="alternate" type="text/html"/>
<updated>2019-07-21T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># rune vs byte

    type byte uint8
    type rune int32 //'a'

    // is slice of read only bytes
  </content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mysql-datatype</title>
<link href="/b/db/mysql-var" rel="alternate" type="text/html"/>
<updated>2019-07-18T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Data Type(数据类型)

	NULL means you do not have to provide a value for the field... default to null
	</content>
</entry><entry xml:base="https://ahuigo.github.io">
<title>mysql-time</title>
<link href="/b/db/mysql-time" rel="alternate" type="text/html"/>
<updated>2019-07-18T00:00:00Z</updated>
<summary/>
<published>2018-09-27T00:00:00Z</published>
<content># Time Type
精确到微秒

    TIME(6), DATETIME(6), TIMESTAMP(6)

# Format Convert Time

## select now(),sy</content>
</entry></feed>